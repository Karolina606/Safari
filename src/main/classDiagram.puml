@startuml
skinparam classAttributeIconSize 0

package safari.animals{
    abstract class Animal{
        #energyLevel: int
        #sleepTime: int
        #position: Position
        +isAsleep: boolean
        +Animal(Position)
        +getPosition():Position
        +setPosition(Position):void
        -{abstract}move(int, int): void
        -{abstract}reproduction(List<Animal>): void
        -{abstract}eat(Object): void
    }
    note left of Animal:-energyLevel będzie w zakresie od 0 do 20 \n -przy każdym ruchu poziom energii spada \n -podczas jedzenia rośnie o wartoć odżywczą pokarmu \n -Dla każdego z tych zakresów (0,6], (6,14], (14, 20] zwierzęta poruszają się \n o inną liczbę pól \n -jeśli wartość ta spanie paniżej 4 zwierze z pewnym prawdopodobieństwem zaśnie \n - dla wartości 0 zwierze umiera
    class Zebra{
        -{static}quantity: int
        +Zebra(Position)
        +getPosition():Position
        +setPosition(Position):void
        +move(int, int): void
        -reproduction(List<Animal>): void
        -eat(Object): void
    }
    class Elephant{
        -{static}quantity: int
        +Elephant(Position)
        +getPosition():Position
        +setPosition(Position):void
        +move(int, int): void
        -reproduction(List<Animal>): void
        -eat(Object): void
    }
    class Lion{
        -{static}quantity: int
        +Lion(Position)
        +getPosition():Position
        +setPosition(Position):void
        +move(int, int): void
        -reproduction(List<Animal>): void
        -eat(Object): void
        -attack(Object): void
    }

    Animal <|-- Zebra
    Animal <|-- Elephant
    Animal <|-- Lion
}
package safari.plants{
    abstract class Plant{
        #energyValue: int
        #position: Position
        +Plant(Position)
        +getEnergyValue(): int
        +getPosition():Position
        +setPosition(Position):void
    }
    class Grass{
        -{static}quantity: int
        +Grass(Position)
        +getEnergyValue(): int
        +getPosition():Position
        +setPosition(Position):void
    }
    class Tree{
        -{static}quantity: int
        -leavesQuantity: int
        +Three(Position)
        +getEnergyValue(): int
        +getLeavesQuantity(): int
        +decreaseLeavesQuantity(): int
        +getPosition():Position
        +setPosition(Position):void
    }
    note top of Tree: energyValue to wartość odżywcza \n jednego listka w tym przypadku

    Plant <|-- Grass
    Plant <|-- Tree
}

package safari.human{
    class Human{
        -position: Position
        -gun: Gun
        -lookForTheAim(List<Animals>): Position
        +Human(Position)
        +getPosition():Position
        +setPosition(Position):void
        +shoot(Position): void
    }
    class Gun{
        ~quantityOfBullets: int
        +Gun()
        +shoot(Position):void
    }
    Human *-- Gun
}

package safari{
    class Safari{
        +width: int
        +height: int
        +safari:Object[][]
        +allAnimals: List<Animal>
        +Safari(int, int)
        +main(String[]):void
    }

    Safari o-- Animal
    Safari o-- Plant
    Safari o-- Human
}
package safari.positionSystem{
    class Position{
        -x: int
        -y: int
        +getX(): int
        +getY(): int
        +setX(int): void
        +setY(int):void
        +Position(int, int): void
        +{static}randomPosition(): Position
    }

    Animal *-- Position
    Zebra *-- Position
    Elephant *-- Position
    Lion *-- Position

    Plant *-- Position
    Grass *-- Position
    Tree *-- Position
    Human *-- Position
}

@enduml